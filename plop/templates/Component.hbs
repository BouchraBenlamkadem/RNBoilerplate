{{#if (eq fileType 'TypeScript')}}
import * as React from 'react';
import {  StyleSheet {{#if RNComponents}}, {{RNComponents}}{{/if}} } from 'react-native';
{{#if CommonComponent}}
{{#each CommonComponent}}
import {{this}} from '../Common/{{this}}';
{{/each}}
{{/if}}


interface {{pascalCase component}}Props {
  style?: any
}

const {{pascalCase component}} = ({style}: {{pascalCase component}}Props) => {
  return (
    <{{pascalCase root}} {{#if addStyle}}style={[styles.container,style]}{{else}}style={style}{{/if}} {{{props}}} {{#if (eq (length children) 0)}}/{{/if}}>
      {{#each children}}
      <{{pascalCase this.name}} {{{this.props}}} />
      {{/each}}
    {{#unless (eq (length children) 0)}}</{{pascalCase root}}>{{/unless}}  
  );
};

export default {{pascalCase component}};

const styles = StyleSheet.create({
  container: {}
});

{{else}}
import React from 'react';
import { View, Text } from 'react-native';

const {{pascalCase component}} = () => {
  return (
    <View>
      <Text>React Native JavaScript Component</Text>
    </View>
  );
};

export default {{pascalCase component}};
{{/if}}
